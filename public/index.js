// Generated by CoffeeScript 1.9.2
(function() {
  var Jsfxr, app, cheerio, jsfxr, nicolive;

  nicolive = require('nicolive');

  cheerio = require('cheerio');

  Jsfxr = require('../lib/jsfxr');

  jsfxr = new Jsfxr;

  app = angular.module('nicolive', ['ngAnimate', 'ngStorage', 'jaggy']);

  app.run(function($rootScope, $localStorage) {
    $rootScope.$storage = $localStorage;
    $rootScope.chats = [];
    $rootScope.viewer = null;
    $rootScope.view = function() {
      $rootScope.chats = [];
      if ($rootScope.viewer != null) {
        $rootScope.viewer.end();
      }
      $localStorage.channel = $localStorage.channel.match(/lv\d+/)[0];
      return nicolive.view($localStorage.channel, {
        from: 1
      }, function(error, viewer) {
        var chunks;
        if (error != null) {
          return alert(error);
        }
        chunks = '';
        $rootScope.viewer = viewer;
        return $rootScope.viewer.on('data', function(buffer) {
          var chunk, data, element, item, j, len, ref, resultcode, results;
          chunk = buffer.toString();
          chunks += chunk;
          if (!chunk.match(/\u0000$/)) {
            return;
          }
          data = cheerio('<data>' + chunks + '</data>');
          chunks = '';
          resultcode = data.find('thread').attr('resultcode');
          if (resultcode > 0) {
            return alert('Resultcode is ' + resultcode);
          }
          ref = data.find('chat');
          results = [];
          for (j = 0, len = ref.length; j < len; j++) {
            item = ref[j];
            element = cheerio(item);
            results.push($rootScope.$apply(function() {
              var chat;
              chat = {
                attr: element.attr(),
                body: element.text()
              };
              return $rootScope.chats.unshift(chat);
            }));
          }
          return results;
        });
      });
    };
    if ($localStorage.channel.length) {
      return $rootScope.view();
    }
  });

  app.directive('popopo', function() {
    return {
      restrict: 'A',
      scope: {
        popopo: '='
      },
      link: function(scope, element) {
        var i, popopo, text;
        text = scope.popopo;
        jsfxr.regenerate({
          waveType: 0,
          sustainTime: 0.05 + 0.05 * Math.random(),
          decayTime: 0.10 + 0.10 * Math.random(),
          startFrequency: 0.10 + 0.40 * Math.random(),
          slide: 0.10 + 0.10 * Math.random(),
          lpFilterCutoff: 1,
          masterVolume: 0.5
        });
        i = 0;
        setTimeout(function() {
          return popopo();
        });
        return popopo = function() {
          if (text.length < i) {
            return;
          }
          element.text(text.slice(0, i++));
          jsfxr.play();
          return setTimeout(popopo, 1000 / 20);
        };
      }
    };
  });

}).call(this);
